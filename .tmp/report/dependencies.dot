digraph test {
rankdir=LR;
ranksep=0.1; nodesep=0.1; defaultdist = 0.1; len = 0.1;
node [shape=ellipse, label="client"]; "client";
node [shape=box, label="gcc"]; "client-rule";
"client-rule" -> "client";
node [shape=ellipse, label="client.o"]; "client-o";
node [shape=box, label="gcc -c"]; "client-o-rule";
"client-o-rule" -> "client-o";
node [shape=ellipse, label="client.c"]; "client-c";
"client-c" -> "client-o-rule";
node [shape=ellipse, label="client.d"]; "client-d";
node [shape=box, label="gcc -M"]; "client-d-rule";
"client-d-rule" -> "client-d";
node [shape=ellipse, label="client.c"]; "client-c";
"client-c" -> "client-d-rule";
"client-d" -> "client-o-rule";
"client-o" -> "client-rule";
node [shape=ellipse, label="die.o"]; "die-o";
node [shape=box, label="gcc -c"]; "die-o-rule";
"die-o-rule" -> "die-o";
node [shape=ellipse, label="die.c"]; "die-c";
"die-c" -> "die-o-rule";
node [shape=ellipse, label="die.d"]; "die-d";
node [shape=box, label="gcc -M"]; "die-d-rule";
"die-d-rule" -> "die-d";
node [shape=ellipse, label="die.c"]; "die-c";
"die-c" -> "die-d-rule";
"die-d" -> "die-o-rule";
"die-o" -> "client-rule";
node [shape=ellipse, label="ensure_directory.o"]; "ensure-directory-o";
node [shape=box, label="gcc -c"]; "ensure-directory-o-rule";
"ensure-directory-o-rule" -> "ensure-directory-o";
node [shape=ellipse, label="ensure_directory.c"]; "ensure-directory-c";
"ensure-directory-c" -> "ensure-directory-o-rule";
node [shape=ellipse, label="ensure_directory.d"]; "ensure-directory-d";
node [shape=box, label="gcc -M"]; "ensure-directory-d-rule";
"ensure-directory-d-rule" -> "ensure-directory-d";
node [shape=ellipse, label="ensure_directory.c"]; "ensure-directory-c";
"ensure-directory-c" -> "ensure-directory-d-rule";
"ensure-directory-d" -> "ensure-directory-o-rule";
"ensure-directory-o" -> "client-rule";
node [shape=ellipse, label="fd_set.o"]; "fd-set-o";
node [shape=box, label="gcc -c"]; "fd-set-o-rule";
"fd-set-o-rule" -> "fd-set-o";
node [shape=ellipse, label="fd_set.c"]; "fd-set-c";
"fd-set-c" -> "fd-set-o-rule";
node [shape=ellipse, label="fd_set.d"]; "fd-set-d";
node [shape=box, label="gcc -M"]; "fd-set-d-rule";
"fd-set-d-rule" -> "fd-set-d";
node [shape=ellipse, label="fd_set.c"]; "fd-set-c";
"fd-set-c" -> "fd-set-d-rule";
"fd-set-d" -> "fd-set-o-rule";
"fd-set-o" -> "client-rule";
node [shape=ellipse, label="logger.o"]; "logger-o";
node [shape=box, label="gcc -c"]; "logger-o-rule";
"logger-o-rule" -> "logger-o";
node [shape=ellipse, label="logger.c"]; "logger-c";
"logger-c" -> "logger-o-rule";
node [shape=ellipse, label="logger.d"]; "logger-d";
node [shape=box, label="gcc -M"]; "logger-d-rule";
"logger-d-rule" -> "logger-d";
node [shape=ellipse, label="logger.c"]; "logger-c";
"logger-c" -> "logger-d-rule";
"logger-d" -> "logger-o-rule";
"logger-o" -> "client-rule";
node [shape=ellipse, label="maildir.o"]; "maildir-o";
node [shape=box, label="gcc -c"]; "maildir-o-rule";
"maildir-o-rule" -> "maildir-o";
node [shape=ellipse, label="maildir.c"]; "maildir-c";
"maildir-c" -> "maildir-o-rule";
node [shape=ellipse, label="maildir.d"]; "maildir-d";
node [shape=box, label="gcc -M"]; "maildir-d-rule";
"maildir-d-rule" -> "maildir-d";
node [shape=ellipse, label="maildir.c"]; "maildir-c";
"maildir-c" -> "maildir-d-rule";
"maildir-d" -> "maildir-o-rule";
"maildir-o" -> "client-rule";
node [shape=ellipse, label="main.o"]; "main-o";
node [shape=box, label="gcc -c"]; "main-o-rule";
"main-o-rule" -> "main-o";
node [shape=ellipse, label="main.c"]; "main-c";
"main-c" -> "main-o-rule";
node [shape=ellipse, label="main.d"]; "main-d";
node [shape=box, label="gcc -M"]; "main-d-rule";
"main-d-rule" -> "main-d";
node [shape=ellipse, label="main.c"]; "main-c";
"main-c" -> "main-d-rule";
"main-d" -> "main-o-rule";
"main-o" -> "client-rule";
node [shape=ellipse, label="masprintf.o"]; "masprintf-o";
node [shape=box, label="gcc -c"]; "masprintf-o-rule";
"masprintf-o-rule" -> "masprintf-o";
node [shape=ellipse, label="masprintf.c"]; "masprintf-c";
"masprintf-c" -> "masprintf-o-rule";
node [shape=ellipse, label="masprintf.d"]; "masprintf-d";
node [shape=box, label="gcc -M"]; "masprintf-d-rule";
"masprintf-d-rule" -> "masprintf-d";
node [shape=ellipse, label="masprintf.c"]; "masprintf-c";
"masprintf-c" -> "masprintf-d-rule";
"masprintf-d" -> "masprintf-o-rule";
"masprintf-o" -> "client-rule";
node [shape=ellipse, label="message.o"]; "message-o";
node [shape=box, label="gcc -c"]; "message-o-rule";
"message-o-rule" -> "message-o";
node [shape=ellipse, label="message.c"]; "message-c";
"message-c" -> "message-o-rule";
node [shape=ellipse, label="message.d"]; "message-d";
node [shape=box, label="gcc -M"]; "message-d-rule";
"message-d-rule" -> "message-d";
node [shape=ellipse, label="message.c"]; "message-c";
"message-c" -> "message-d-rule";
"message-d" -> "message-o-rule";
"message-o" -> "client-rule";
node [shape=ellipse, label="session.o"]; "session-o";
node [shape=box, label="gcc -c"]; "session-o-rule";
"session-o-rule" -> "session-o";
node [shape=ellipse, label="session.c"]; "session-c";
"session-c" -> "session-o-rule";
node [shape=ellipse, label="session.d"]; "session-d";
node [shape=box, label="gcc -M"]; "session-d-rule";
"session-d-rule" -> "session-d";
node [shape=ellipse, label="session.c"]; "session-c";
"session-c" -> "session-d-rule";
"session-d" -> "session-o-rule";
"session-o" -> "client-rule";
node [shape=ellipse, label="settings.o"]; "settings-o";
node [shape=box, label="gcc -c"]; "settings-o-rule";
"settings-o-rule" -> "settings-o";
node [shape=ellipse, label="settings.c"]; "settings-c";
"settings-c" -> "settings-o-rule";
node [shape=ellipse, label="settings.d"]; "settings-d";
node [shape=box, label="gcc -M"]; "settings-d-rule";
"settings-d-rule" -> "settings-d";
node [shape=ellipse, label="settings.c"]; "settings-c";
"settings-c" -> "settings-d-rule";
"settings-d" -> "settings-o-rule";
"settings-o" -> "client-rule";
node [shape=ellipse, label="signal_handler.o"]; "signal-handler-o";
node [shape=box, label="gcc -c"]; "signal-handler-o-rule";
"signal-handler-o-rule" -> "signal-handler-o";
node [shape=ellipse, label="signal_handler.c"]; "signal-handler-c";
"signal-handler-c" -> "signal-handler-o-rule";
node [shape=ellipse, label="signal_handler.d"]; "signal-handler-d";
node [shape=box, label="gcc -M"]; "signal-handler-d-rule";
"signal-handler-d-rule" -> "signal-handler-d";
node [shape=ellipse, label="signal_handler.c"]; "signal-handler-c";
"signal-handler-c" -> "signal-handler-d-rule";
"signal-handler-d" -> "signal-handler-o-rule";
"signal-handler-o" -> "client-rule";
}
